					Spoken Tutorials - Bash Assignment 
				Funded by the National Mission on Education through ICT
				       Indian Institute of Technology Bombay,
					       http://spoken-tutorial.org
-------------------------------------------------------------------------------------------------------------------
Introduction to Bash

1) Write a simple Bash shell script to display the message "Welcome to Bash learning" and "***************" on separate lines. 

Ans:
nano welcome.sh

echo "Welcome to Bash learning"
echo "***********************"

chmod +x welcome.sh

./welcome_script.sh



Basics of Shell Scripting


1) Write a simple Bash program to get the following system variables:
   a. pwd
   b. logname

Ans:
cd=$(pwd)
echo "$cd"

login=$(logname)
echo "$login"


2) Write a simple Bash program:
   a. To ask username from user
   b. Exit the program, if user does not enter anything within 10 seconds
   
   Hint: read -t 10 -p

Ans:
echo "Enter a username:"
read -t 10 username


if [ -z "$username" ]; then
    echo "Exiting"
    exit 1
fi

echo "Hi, $username!"



Command Line arguments and Quoting

1) Write a bash program for addition using command line arguments.

Ans:
if [ "$#" -ne 2 ]; then
    echo "Usage: $0 <num1> <num2>"
    exit 1
fi

num1=$1
num2=$2

sum=$(($num1 + $num2))

echo "The sum of $num1 and $num2 is: $sum"


Globbing and Export statement

1) Write a Bash script to do all operations discussed under Globbing

echo "Files:"
ls *.sh

echo "Files starting with n:"
ls n*.sh

echo "Files starting with [a-c]:"
ls [a-c]*.sh

echo "Files not starting with [a-c]:"
ls [^a-c]*.sh

echo "Files  starting with A or a:"
ls [Aa]*.sh

export var=leo
echo $var

/bin/bash

Array Operations in BASH

1) Declare an Array names of length 7 and find
   a. The total number of elements
   b. Print all the elements
   c. Print the 5th element

Ans:
names=("vishnu" "sankar" "vs" "jvs" "vish" "sank" "shankar")

total_elements=${#names[@]}
echo "Total number of elements : $total_elements"

echo "All elements in the array:"
for name in "${names[@]}"
do
    echo "$name"
done

echo "5th element: ${names[4]}"




More on Arrays

1) Declare an Array names2 of length 7 and perform following operations-
   a. Extract three elements starting from index two. 
   b. Replace third element with 'Debian' and display.
   c. Append any new name at the end of Array.
Ans:
names2=("vishnu" "sankar" "vs" "jvs" "vish" "sank" "shankar")
extracted_elements=("${names2[@]:2:3}")

names2[2]="Debian"

names2+=("embedur")

echo "a. Elements starting from index two:"
for element in "${extracted_elements[@]}"
do
    echo "$element"
done

echo "b. Updated Array:"
for name in "${names2[@]}"
do
    echo "$name"
done

echo "c. Array after adding:"
for name in "${names2[@]}"
do
    echo "$name"
done


Conditional execution

1) Write a script which will take your name as an input.
2) It should check this name with your system's username.
3) If the username matches, it should greet you by displaying "Hello".
4) Else, it should display "Try again"

HINT: Your system's username is stored in a variable $USER 

Ans:
echo "Please enter your name:"
read input_name

system_username=$USER

if [ "$input_name" == "$system_username" ]; then
    echo "Hello, $input_name!"
else
    echo "Try again."
fi


Nested and multilevel if elsif statements

1) Write a program to output different messages when number is:
   a. Greater than 3
   b. Lesser than 3
   c. Or equal to 3
   d. Or when the user input is empty
Ans:
echo "Enter a number:"
read user_input
if [ -z "$user_input" ]; then
    echo "Empty"
else
    if ((user_input > 3)); then
        echo "The number is greater than 3."
    elif ((user_input < 3)); then
        echo "The number is less than 3."
    else
        echo "The number is equal to 3."
    fi
fi



